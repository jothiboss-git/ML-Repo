# Use Python image with UV pre-installed
FROM ghcr.io/astral-sh/uv:python3.9-bookworm-slim

# Install system dependencies for TA-Lib
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    python3-dev \
    autoconf \
    automake \
    libtool \
    && rm -rf /var/lib/apt/lists/*

# Install TA-Lib from source and verify installation
WORKDIR /tmp
RUN git clone https://github.com/TA-Lib/ta-lib.git && \
    cd ta-lib && \
    chmod +x autogen.sh && \
    ./autogen.sh && \
    ./configure --prefix=/usr && \
    make -j$(nproc) && \
    make install && \
    cd .. && \
    rm -rf ta-lib && \
    ldconfig && \
    # Verify library installation
    ls -l /usr/lib/libta* && \
    ls -l /usr/include/ta-lib/

# Set environment variables for TA-Lib
ENV TA_INCLUDE_PATH=/usr/include/ta-lib
ENV TA_LIBRARY_PATH=/usr/lib
ENV LD_LIBRARY_PATH=/usr/lib

# Enable bytecode compilation and copy mode
ENV UV_COMPILE_BYTECODE=1
ENV UV_LINK_MODE=copy

# Set the working directory
WORKDIR /app

# Copy project files
COPY . /app

# Install dependencies using UV with caching
RUN --mount=type=cache,target=/root/.cache/uv \
    uv pip install --system wheel setuptools && \
    uv pip install --system 'numpy==2.0.2' 'Cython==0.29.36' && \
    # Verify library before installing ta-lib
    ls -l /usr/lib/libta* && \
    CFLAGS="-I/usr/include/ta-lib" LDFLAGS="-L/usr/lib" uv pip install --system 'ta-lib==0.6.3' && \
    uv pip install --system 'loguru>=0.7.3' 'pydantic-settings>=2.6.1' 'quixstreams>=3.9.0'

# Run the application
CMD ["python", "run.py"]